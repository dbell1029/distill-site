[
  {
    "path": "posts/2021-10-04-things-are-going-well-i-think/",
    "title": "I've Scraped It!",
    "description": {},
    "author": [],
    "date": "2021-10-04",
    "categories": [],
    "contents": "\r\nWhy Fortnite?\r\nI love Fortnite, it’s far and away my favorite game. Don’t know how it works? That’s okay, it’s a pretty simple premise. One hundred players (or 99 if it’s trios) land on an island and battle it out to be the last one (team) standing. It’s a household name across the world, with, as of last May, more than 350 million people having played the game. Fornite became so popular so quickly that less than two years after launch, they hosted the Fortnite World Cup where less than 200 players (out of 40 million competitors) qualified to compete for a cut of the whopping $30 million prizepool (the largest in esports history).\r\nWorld Cup helped Epic Games prove to the gaming community that they had built a highly-competetive and compelling esport. And what helped their game stick out from other esports was the fact they could host their tournaments not only in person at LAN events, but in open-format, online settings as well. Thus, in September of 2019, they hosted their first Fortnite Champion Series (FNCS) online tournament. And since Fortnite releases major content updates every few months in the form of new “seasons,” an accompaning FNCS tournament caps off each season of competitive play.\r\nI’m more invested in these Fortnite tourneys than a Lambeau Field Cheesehead is in their precious Green Bay Packers. I find the storylines with each player to be very fascinating. Since most of these players are in their teens, playing in these tournaments means, possibly, winning life-changing amounts of money. And the kind of skill that it takes to compete in this game at the highest level is absolutely insane - no other esport comes remotely close. I’ve been following the competitive Fortnite scene with undivided attention since last March. Over this same span of time, although admitedly probably more recently, I’ve developed a love for data science. In this time I’ve noticed a gap in the Fortnite scene. There’s the developers that make the game, the players that compete in the game, the coaches that mentor the players, and those same developers that make the players’ data publicly available. But as far as I can tell, there’s currently no data scientists that are analyzing this data, at least not on a large enough scale that I’ve seen.\r\nThat’s where I come in.\r\nGetting the Data\r\nWith hundreds of thousands of players competing in online tournaments in their respective regions, their performance data is all documented at fortnitetracker.com. I’ve known for awhile that I wanted to do my senior project involving this data, but I didn’t realize until recently that in order for me to obtain this data in any sort of sustainable way, I’d have to webscrape it. I was counseled by a fellow Fortnite enthusiast, also a data scientist, to use the Python package Beautiful Soup to scrape and parse this data. I’ve had a decent amount of experience programming in Python and a lot of experience programming in general, so I figured I could teach myself the basics (with some help from a few articles and YouTube videos).\r\nThere are lot’s of different types of pages on Fortnite Tracker, but I decided to focus on scraping a single page - an event’s page from the most recent FNCS Grand Finals.\r\nGetting my script started was simple enough, just importing the proper libraries to be able to access and parse the HTML, and manipulate the data:\r\nimport requests\r\nfrom bs4 import BeautifulSoup as soup \r\nimport json\r\nimport pandas as pd\r\nimport numpy as np\r\nThen I requested the url and parsed the respective HTML:\r\n# url\r\nurl = \"https://fortnitetracker.com/events/epicgames_S17_FNCS_Finals_EU?window=S17_FNCS_Finals_EU_Round2&sm=floating\"\r\n# requesting the webpage\r\nr = requests.get(url)\r\n# defining my html parser and parsing the webpage html\r\nsoup = soup(r.content, \"html.parser\")\r\nNext came the fun part - digging through the source code of the webpage and finding where the data was buried. I’m really familiar with the website itself, so finding the data was fairly straightfoward. It also helps that all of the data I needed was stored in JSON formatted dictionaries, and parsing through those dictionaries was easy enough using the JSON package:\r\n# extracting the piece of the JSON that I want \r\nscript = soup.find_all(\"script\", type = \"text/javascript\")[22].string[22:-1]\r\n# storing the scraped JSON\r\ndat = json.loads(script)\r\nThere’s loads of HTML chunks with a “script” tag, so I had to specify which one I wanted to grab. Conveniently, all the data I need is stored in a single script chunk. And that data is also conveniently stored in two dictionaries:\r\nEach player’s account information - accounts\r\nEach player’s (team’s) match history and tournament performance data - entries\r\n# defining each player's account name, nickname, player ID, and other information\r\naccounts = dat[\"internal_Accounts\"]\r\n# defining each entry within the event\r\nentries = dat[\"entries\"]\r\nThe accounts dictionary was a simple one, and pd.DataFrame seamlessly tranforms a dictionary into a dataframe. It stored the data wide-ways, so I had to transpose the data to be long-ways:\r\n# defining each player account in the tournament\r\naccounts = pd.DataFrame(accounts)\r\n# pivoting the dataframe long-ways\r\naccounts_long = accounts.transpose().reset_index()\r\n# renaming index column\r\naccounts_long.rename(columns = {\"index\": \"playerId\"}, inplace = True)\r\nFiguring that part out took 20 minutes. Figuring out the entries dictionary took much longer. I had to dig into dictionaries within dictionaries within dictionaries. I watched some helpful videos and spent a lot of time on Stack Overflow, and I was able to figure it out: I successfully wrote a script that stores the relevant data in a tidy dataframe that I’ll be using to make visualizations and report other interesting analytics. Here’s the code that I WROTE!\r\n# turning the entries list (JSON) into a dataframe\r\nentries_dat = pd.DataFrame(entries)\r\n\r\n# separating the player ID's into three distinct columns\r\nentries_dat[[\"player1\", \"player2\", \"player3\"]] = pd.DataFrame(entries_dat.teamAccountIds.tolist(), index = entries_dat.index)\r\n\r\n# initiate a list for total elims for each team\r\ntotalElimsList = []\r\n\r\n# iterate through each team and add their total elims\r\nfor entry in entries:\r\n    pointBreakdown = entry[\"pointBreakdown\"]\r\n    elims = pointBreakdown[\"TEAM_ELIMS_STAT_INDEX:1\"]\r\n    totalElims = elims[\"timesAchieved\"]\r\n    totalElimsList.append(totalElims)\r\n\r\n# convert this list to an array\r\ntotalElimsArray = np.asarray(totalElimsList)\r\n\r\n# creating a total elims column\r\nentries_dat[\"totalElims\"] = totalElimsArray\r\n\r\n# initiate a list for elim points for each team\r\npointsFromElimsList = []\r\n\r\n# iterate through each team and add their elim points\r\nfor entry in entries:\r\n    pointBreakdown = entry[\"pointBreakdown\"]\r\n    elims = pointBreakdown[\"TEAM_ELIMS_STAT_INDEX:1\"]\r\n    pointsFromElims = elims[\"pointsEarned\"]\r\n    pointsFromElimsList.append(pointsFromElims)\r\n\r\n# convert this to an array\r\npointsFromElimsArray = np.asarray(pointsFromElimsList)\r\n\r\n# creating a elims points column\r\nentries_dat[\"pointsFromElims\"] = pointsFromElimsArray\r\n\r\n# creating a column for placement points\r\nentries_dat[\"pointsFromPlacement\"] = entries_dat[\"pointsEarned\"] - entries_dat[\"pointsFromElims\"]\r\n\r\n# dropping irrelevant columns\r\nentries_dat = entries_dat.drop(columns = [\"pointBreakdown\", \r\n  \"eventId\", \"percentile\", \"score\", \"sessionHistory\", \"sessionStats\", \"teamAccountIds\", \"teamId\", \"tokens\"])\r\n\r\nentries_dat[\"playerId\"] = entries_dat[\"player1\"]\r\n\r\n# joining the first player's nickname on playerId and calling it teams\r\nteams = entries_dat.merge(accounts_long, on = \"playerId\", how = \"left\")\r\n\r\n# dropping irrelevant columns\r\nteams = teams.drop(columns = [\"countryCode\", \"twitchName\", \"twitchId\"])\r\n\r\n# renaming \"nickname\" to \"nickname1\"\r\nteams[\"nickname1\"] = teams[\"nickname\"]\r\n\r\n# dropping \"nickname\" and \"playerId\"\r\nteams = teams.drop(columns = [\"nickname\", \"playerId\"])\r\n\r\n# renaming \"player2\" to \"playerId\"\r\nteams[\"playerId\"] = teams[\"player2\"]\r\n\r\n# join on playerId\r\nteams = teams.merge(accounts_long, on = \"playerId\", how = \"left\")\r\n\r\n# dropping irrelevant columns\r\nteams = teams.drop(columns = [\"countryCode\", \"twitchName\", \"twitchId\"])\r\n\r\n# renaming nickname\r\nteams[\"nickname2\"] = teams[\"nickname\"]\r\n\r\n# dropping \"nickname\" and \"playerId\"\r\nteams = teams.drop(columns = [\"nickname\", \"playerId\"])\r\n\r\n# renaming player3\r\nteams[\"playerId\"] = teams[\"player3\"]\r\n\r\n# joining third player's nickname\r\nteams = teams.merge(accounts_long, on = \"playerId\", how = \"left\")\r\n\r\n# renaming nickname\r\nteams[\"nickname3\"] = teams[\"nickname\"]\r\n\r\n# drop irrelavent columns\r\nteams = teams.drop(columns = [\"countryCode\", \"playerId\", \"twitchName\", \"twitchId\", \"nickname\"])\r\n\r\n# creating team name column\r\nteams = teams.assign(team = teams[\"nickname1\"].astype(str) + ', ' +\r\nteams[\"nickname2\"].astype(str) + ', ' + teams[\"nickname3\"].astype(str))\r\n\r\n# dropping irrelevant columns\r\nteams = teams.drop(columns = [\"player1\", \"player2\", \"player3\"])\r\n\r\n# initiate a list for average elims for each team\r\navgElimsList = []\r\n\r\n# iterate through each team and add their average elims to the list\r\nfor entry in entries:\r\n    sessionStats = entry[\"sessionStats\"]\r\n    avgElims = sessionStats[\"avgElims\"]\r\n    avgElimsList.append(avgElims)\r\n\r\n# initiate a list for average placement\r\navgPlaceList = []\r\n\r\n# iterate through each team and add their average placement to the list\r\nfor entry in entries:\r\n    sessionStats = entry[\"sessionStats\"]\r\n    avgPlace = sessionStats[\"avgPlace\"]\r\n    avgPlaceList.append(avgPlace)\r\n\r\n# initiate a list for total wins per team\r\nwinsList = []\r\n\r\n# iterate through each team and add their total wins to the list\r\nfor entry in entries:\r\n    sessionStats = entry[\"sessionStats\"]\r\n    wins = sessionStats[\"wins\"]\r\n    winsList.append(wins)\r\n\r\n# initiate a list for games played per team\r\nmatchesList = []\r\n\r\n# iterate through each team and add their matches played\r\nfor entry in entries:\r\n    sessionStats = entry[\"sessionStats\"]\r\n    matches = sessionStats[\"matches\"]\r\n    matchesList.append(matches)\r\n\r\n# convert all these lists to arrays to be able to merge with the main data frame\r\navgElimsArray = np.asarray(avgElimsList)\r\navgPlaceArray = np.asarray(avgPlaceList)\r\nmatchesArray = np.asarray(matchesList)\r\nwinsArray = np.asarray(winsList)\r\n\r\n# adding these arrays as columns in \"teams\"\r\nteams[\"wins\"] = winsArray\r\nteams[\"averagePlace\"] = avgPlaceArray\r\nteams[\"averageElims\"] = avgElimsArray\r\nteams[\"matchesPlayed\"] = matchesArray\r\n\r\n# initiating a list\r\nelimsPerGameList = []\r\n\r\n# storing each team's elims per game in a long list\r\n# looping through each team in entries\r\nfor entry in entries:\r\n    sessionHistory = entry[\"sessionHistory\"]\r\n    # looping through each match each team plays\r\n    for session in sessionHistory:\r\n        matchStats = session[\"matchStats\"]\r\n        elims = matchStats[\"elims\"]\r\n        elimsPerGameList.append(elims)\r\n\r\n# setting n to 12, since each team plays matches\r\nn = 12\r\n\r\n# converting this long list into a list of 33 lists, each with 12 elements (one for each match played)\r\noutput = [elimsPerGameList[i:i + n] for i in range(0, len(elimsPerGameList), n)]\r\n\r\n# turning this list of lists into a data frame that I can concat with \"teams\" df\r\nelimsPerGameDF = pd.DataFrame(output)\r\n\r\n# initiating a list\r\nplacementPerGameList = []\r\n\r\n# storing each team's elims per game in a long list\r\n# looping through each team in entries\r\nfor entry in entries:\r\n    sessionHistory = entry[\"sessionHistory\"]\r\n    # looping through each match each team plays\r\n    for session in sessionHistory:\r\n        matchStats = session[\"matchStats\"]\r\n        placement = matchStats[\"placement\"]\r\n        placementPerGameList.append(placement)\r\n\r\n# setting n to 12, since each team plays matches\r\nn = 12\r\n\r\n# converting this long list into a list of 33 lists, each with 12 elements (one for each match played)\r\noutput = [placementPerGameList[i:i + n] for i in range(0, len(placementPerGameList), n)]\r\n\r\n# turning this list of lists into a data frame that I can concat with \"teams\" df\r\nplacementPerGameDF = pd.DataFrame(output)\r\n\r\n# a dictionary with old and new column names\r\nelimsDict = {0: \"game1Elims\",\r\n             1: \"game2Elims\",\r\n             2: \"game3Elims\",\r\n             3: \"game4Elims\",\r\n             4: \"game5Elims\",\r\n             5: \"game6Elims\",\r\n             6: \"game7Elims\",\r\n             7: \"game8Elims\",\r\n             8: \"game9Elims\",\r\n             9: \"game10Elims\",\r\n             10: \"game11Elims\",\r\n             11: \"game12Elims\",\r\n             }\r\n\r\n# renaming the columns\r\nelimsPerGameDF.rename(columns = elimsDict, inplace = True)\r\n\r\n# a dictionary with old and new column names\r\nplacementDict = {0: \"game1Placement\",\r\n             1: \"game2Placement\",\r\n             2: \"game3Placement\",\r\n             3: \"game4Placement\",\r\n             4: \"game5Placement\",\r\n             5: \"game6Placement\",\r\n             6: \"game7Placement\",\r\n             7: \"game8Placement\",\r\n             8: \"game9Placement\",\r\n             9: \"game10Placement\",\r\n             10: \"game11Placement\",\r\n             11: \"game12Placement\",\r\n             }\r\n\r\n# renaming the columns \r\nplacementPerGameDF.rename(columns = placementDict, inplace = True)\r\n\r\n# combining the three dataframes\r\nteams = pd.concat([teams, elimsPerGameDF, placementPerGameDF], axis=1)\r\nAnd here’s what the dataframe looks like:\r\n\r\nWhat I Learned\r\nI learned a couple things while writing this code:\r\nI’m smarter than I think. While I may not know the answers to everything, I know how to think through those problems to reach a solution.\r\nAsking for help saves a lot of time. Towards the beginning of this project, I got stuck at a few dead ends that prevented me from making any progress (despite hours of Googling). I decided to ask an old CS professor if he had any idea why I was stuck. He indentified the problem immediately and, from then on, my progress was twice as fast. He told me that sometimes 10 minutes with an expert can be worth hours of searching on the internet.\r\nI’m super proud of the work I’ve been able to do so far and I’m looking forward to building out my dashboard/reporting tool to bring this project full circle.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2025-04-30T15:39:50-06:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-09-22-heres-my-proposal/",
    "title": "Here's My Proposal",
    "description": "I'm graduating from college soon, and as a culmination of my higher education, I'm working on a Senior Project that leverages some of the skills I've gained over the last four years.",
    "author": [],
    "date": "2021-09-22",
    "categories": [],
    "contents": "\r\nSome Background\r\nMy favorite game is Fortnite. Fortnite has a robust competitive community and consequently, there’s loads of tournament data and player statistics that are publicly listed on Fortnite Tracker. But while the data is easy to view, it’s not easy to collect, munge, or explore because their public API doesn’t access competitive data. So to access this data, it needs to be web scraped.\r\nMy project really has two main parts:\r\nA python script that scrapes and stores the data in either a relational database, csv file, or pandas data frame.\r\nA dashboard or some series of charts that aptly visualizes the data collected from the event page.\r\nJust like professional sports, esports are in dire need of data analytics. This will be a great way for me to get my foot in the door in the esports industry.\r\nDomain(s) to Investigate\r\nI see two, maybe three domains. First, esports. Second, data science. And third, computer science. Since the vast majority of my free time is spent watching, learning, or playing Fortnite, I have a very solid understanding about the data I’m going to be working with. Most of my time is going to be spent learning how to collect the data, and how I’m going to visualize it in a professional way. And since I’m going to be writing a python script, I’m going to need to learn computer science techniques and practices on how best to scrape the data.\r\nProposed Deliverables\r\nMy main deliverable will be the dashboard or visualization that I make after I collect my data. But I can think of a few others if I have the time:\r\nAn interactive website, or more likely a page on my blog, that houses the dashboard that I made.\r\nA relational database that contains all of the data I collect.\r\nA machine learning model that predicts the winner of the next major tournament based on results of previous tournaments (and various other factors that I could collect from Fortnite Tracker).\r\nI’m looking forward to sharing my progress and bringing you along on this journey.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2025-04-30T15:39:50-06:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-09-22-sypherpk-x-metal-umbrella-oni-studios/",
    "title": "SypherPK x Metal Umbrella, Oni Studios",
    "description": {},
    "author": [],
    "date": "2021-07-29",
    "categories": [],
    "contents": "\r\nSypherPK just announced his new apparel brand, Metal Umbrella. Sypher is a world-famous Twitch streamer, YouTuber, and now, fashion icon. While no clothing has been revealed yet, the brand features a heavy anime aesthetic, referencing Sypher’s love for Japanese animation. The first drop - titled “Too Young To Worry” - will be revealed Sunday, August 1st at 11 a.m. Central. It will be available for purchase on Thursday, August 5th.\r\nThus continues Oni Studios’ ambitious climb towards the top of the esports, entertainment, and live-streaming industries. They specialize in all things content creation, helping creators build their brand, grow their audience, and manage their time and finances. They strive to be everything that was missing in this space: a loyal resource for burgeoning creators.\r\nI’m so impressed with what Sypher and his team have been able to do in the last year-and-a-half. Covid saw many industries struggle, but Sypher was perfectly posed to take full advantage of the opportunity. Since communities all across the world were in lockdown, people had more free time than perhaps ever before. People were playing more video games, watching more YouTube and Twitch, and Sypher capitalized on this new demographic.\r\nHis YouTube subscriber base nearly tripled over that time, bringing daily, quality Fortnite content to millions (yes millions) of viewers. This success led to other opportunities, such as new brand partnernships, an exclusive streaming deal with Twitch, and the creation of Oni Studios.\r\nThe sky’s the limit with this team, I’m excited to see what they do next.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2025-04-30T15:39:50-06:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-09-22-solo-cash-cup-july-25-2021/",
    "title": "Solo Cash Cup - July 25, 2021",
    "description": {},
    "author": [],
    "date": "2021-07-25",
    "categories": [],
    "contents": "\r\nBenjy played out of his mind yesterday, getting 2nd in the EU tournament with two wins, 13th average placement, and seven average elims. He was two points off winning the tourney, but an absolutely dominant performance nonetheless. Benjy’s gotta be the most likeable pro. He exudes kindness and is just such a wholesome kid. He’s so fun to watch, he’ll probably post a video on his YouTube soon. Benjy’s always been a solo demon, he’s struggled to find huge success in team modes, but I’m hoping this season is different. I’m watching him play the trio cash cup right now and he’s playing well. Fingers crossed.\r\nXTRA Reet had an amazing day yesterday, winning both the Asia and NA West cash cups. Insane performance. Reet is also a better solo than team player (getting 3rd in FNCS All-Stars last month), but he’s a really good fighter. During the NAW tournament, he got four 1st’s, a 2nd, and a 3rd, with 6 average elims.\r\nTSM Commandment won the NAE tournament, with TNG Chukky and XTRA Illest getting 2nd and 3rd respectively. Commandment might be the most naturally talented Fortnite player of all time, kid’s insane.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2025-04-30T15:39:50-06:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-09-22-trio-cash-cup-july-19-2021/",
    "title": "Trio Cash Cup - July 19, 2021",
    "description": {},
    "author": [],
    "date": "2021-07-19",
    "categories": [],
    "contents": "\r\nEU\r\nChapix, GUILD JannisZ, and GUILD Hen took the crown today in the second trios cash cup of the season, with a whopping five victory royales, 120 elims, and an average placement of 5th, breaking the EU Cash Cup point record in the process. Absolutely dominant performance from the Chapter 2 Season 5 FNCS champions. They didn’t have a great grand finals last season due to being contested off-spawn, but they’ve proved today that they’re still among the best and they’re going nowhere. It’s fun to watch teams with such established chemistry, how their play styles complement each other - it’s a work of art.\r\nBecome Legends Setty, GAMMA Kami, and Galaxy Racer teeq placed second with four victory royales, a cool 100 elims, and average placement of 9.2. 100 Thieves MrSavage, Falcon Refsgaard, and Nordavind Endretta placed 4th with only one victory royale, but an average placement of 3.3 (a 2nd and three 3rd’s), and 92 eliminations.\r\nNAE\r\nSo here’s the deal. Last week, 2019 World Cup solo champion Sentinals Bugha announced that he would be trioing with Chapter 2 Season 4 and 6 winners ENDLESS Deyy and ENLESS Mero, meaning Deyy and Mero would split from their teammate ENDLESS Reverse2k. Why on Earth would they split? They just won FNCS last month, perhaps the first or second most consistent trio in NAE over the last year or so. Deyy and Mero felt said they wanted to trio with an IGL that’s more reliable, not having to rely on solo clutches, so they could win more games. Well, the community was a little upset (for good reason).\r\nAnyways, after lots of drama, Bugha decided he’d rather stick with his original trio, so that left Deyy, Mero, and Reverse to run it back. Good decision lol. Reverse’s trio won today’s cash cup with two victory royales, 126(!) elims, and an average placement of 9.6. This isn’t surprising at all. Reverse might be the smartest player on NAE, and Deyy and Mero are by far the best fighters alive. Tbh I think Mero might be the best controller player of all time, he performs so incredibly well in big tournaments.\r\nLuminosity Slackes, 1% Acorn, and G2 Jahq placed 2nd. Ghost Blake, Liquid Scoped, and Tru North Okis placed 3rd, completing an impressive comeback after a few bad games.\r\nTrio tournaments are looking really good this season - great, balanced meta. I’m happy Epic have finally decided to give competitive a good loot pool. Wish we had daily cups like last Summer though.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2025-04-30T15:39:50-06:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-09-22-solo-cash-cup-july-18-2021/",
    "title": "Solo Cash Cup - July 18, 2021",
    "description": {},
    "author": [],
    "date": "2021-07-18",
    "categories": [],
    "contents": "\r\nEurope\r\nFresh off the heels of his third FNCS victory, Falcon TaySon won the 1st solo cash cup of the season in convincing fashion, confirming what the majority of the Fortnite community already knows - that TaySon is far and away the best player alive. He finished with 183 points, two victory royales, and an average placement of 16.2.\r\nAs awesome as his performance was, I don’t think that was the biggest story of the day. FaZe Mongraal placed 11th , complete with perhaps the most impressive late-game pop off I’ve seen this year. After not qualifying for FNCS Grand Finals two seasons in a row, struggling to find a consistent trio (all while playing the game less than he ever has) Mongraal made a commitment to turn things around, get back on the grind, and strive to be the best. Well, the practice seems to be paying off. Hopefully this is just the beginning of a much deserved comeback.\r\nNRG benjyfishy, on the other hand, had a less than ideal tournament. He placed 2,647th with two victory royales, but with an average placement of 56.8. I don’t think this is worrisome at all as he placed 5th in the UEFA Euro cup last month, and solos aren’t the main game mode anyway. His attention remains on qualifying for Trio FNCS and hopefully, finally, winning the Axe of Champions.\r\nNorth America East\r\nDL Justice won comfortably with 184 points, three victory royales, and average placement of 36.4. His worst placement of the day was an 88th place, but three 1st’s and a 2nd was enough to win him the tournament - racking up 38 eliminations along the way.\r\n1% Acorn, Tragix, and FaZe Dubs placed 3rd, 4th, and 5th respectively. Tragix has been seeing quite a bit of success in solo tournements, placing 5th in the FNCS All-Star Showdown grand finals. Same story for Dubs who placed just below Tragix, getting 5th. Dubs and Tragix have been playing out of their minds recently and I’m excited to see if they can capitalize once Trio FNCS kicks off in the coming weeks.\r\nThe story for NAE cash cups remains the same - a European player(s) will play very aggressively, shoot to the top of the leaderboard, but refuse to play for end game, leaving the door wide open for North American players to take the lead. This happens almost every tourney. Yes, EU has the better, smarter, more mechanical players - but they just get impatient playing on East. Doesn’t help playing on 80 plus ping either…\r\nSolos\r\nI’ve always been a bigger fan of solo tournaments than team-based tournaments. I play a lot of solos myself, so I find the gameplay more fun to watch. It’s a shame we won’t get any bigger solo tourneys for the forseeable future as trios is the main game mode for the remainder of the year. I’d also like to see some more high-profile duo and squads tournaments as trios are getting a bit stale, but Fortnite’s Fortnite and I’ll watch every tournament no matter what.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2025-04-30T15:39:50-06:00",
    "input_file": {}
  }
]
